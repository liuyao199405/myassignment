{"name": "失败用例a*1 会触发TypeError", "status": "failed", "statusDetails": {"message": "AssertionError: assert 'TypeError' == 'a'", "trace": "self = <fixtureforassignments.testcase.test_calc.TestCalcuLator object at 0x7fcab5e43dc0>\na = 'a', b = 1, errorType = 'TypeError'\ncalc_precedence = <fixtureforassignments.calculator.Calculator object at 0x7fcab5e474c0>\n\n    @allure.story('乘法功能')\n    @allure.title('失败用例{a}*{b} 会触发{errorType}')\n    @pytest.mark.parametrize(**get_calc_data('mul')['fail'])\n    def test_mul_fail(self, a, b, errorType, calc_precedence):\n        with allure.step(f'计算{a}*{b}相乘'):\n            logging.info(f'计算{a}*{b},预期结果为{errorType}异常')\n        with pytest.raises(TypeError) as e:\n>           assert errorType == calc_precedence.mul(a,b)\nE           AssertionError: assert 'TypeError' == 'a'\n\ntest_calc.py:110: AssertionError"}, "steps": [{"name": "计算a*1相乘", "status": "passed", "start": 1627228335455, "stop": 1627228335455}], "attachments": [{"name": "log", "source": "05f99417-0925-4c23-b4af-720e5f463080-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "a", "value": "'a'"}, {"name": "b", "value": "1"}, {"name": "errorType", "value": "'TypeError'"}], "start": 1627228335455, "stop": 1627228335456, "uuid": "f1966201-da67-4a46-97b8-5a6121fd1598", "historyId": "159e287fe2f81e5e4d240240bf26f2cc", "testCaseId": "77e41add71df4ca0f384a7269a650c1f", "fullName": "test_mul_fail[æ°å­åéæ°å­ç¸ä¹]#test_mul_fail", "labels": [{"name": "feature", "value": "计算器"}, {"name": "story", "value": "乘法功能"}, {"name": "suite", "value": "test_mul_fail[æ°å­åéæ°å­ç¸ä¹]"}, {"name": "host", "value": "liuyaodeiMac.local"}, {"name": "thread", "value": "10871-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_mul_fail[æ°å­åéæ°å­ç¸ä¹]"}]}